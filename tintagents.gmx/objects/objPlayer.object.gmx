<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_left = vk_left;
key_right = vk_right;
key_up = vk_up;
key_down = vk_down;

key_jump = vk_shift;
key_shoot = vk_control;

//sounds
/*boop = boop1;
death = death1;
fire = fire1;
jump = jump1;
pickup = pickup1;
step = step1;*/

horzSpeed = 8;
jumpSpeed = 12;
gravityStr = 1;
accel = 6; //speed / accel is what ets added per frame

angle = 0;

team = 0;

my_blend = c_white;

player = 0;
grounded = false;
dead = false;

stun = 0;

arrows = 0;
aiming = 0;
facing = 0;
aim_dir = 0;

step = 0;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_message("hi");
gamepad_set_vibration(player,0,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!dead){
var analog = false;
var analogX = 0, analogY = 0,
    jump = false,jumping = false,
    shoot = false;

    if gamepad_is_connected(player){
        analog = GetAnalogStick(player);
        analogX = analog[0]; analogY = analog[1];
        jump = GetAButtonPressed(player);
        jumping = GetAButton(player);
        shoot = GetXButton(player);
    }else{
        analogX = keyboard_check(key_right) - keyboard_check(key_left);
        analogY = keyboard_check(key_up) - keyboard_check(key_down);
        jump = keyboard_check_pressed(key_jump);
        jumping = keyboard_check(key_jump);
        shoot = keyboard_check(key_shoot);
    }

if !aiming{hspeed += horzSpeed/accel*sqr(1-stun)*analogX;}

var stepping = sign(-sin(step/(room_speed/8)*pi));
if( stun &gt; 0 or analogX == 0 or aiming){
    hspeed += (0 - hspeed)*.2;
    if abs(hspeed)&lt;.1{hspeed = 0; step = 0;}
}
else{step += 1;}
if stepping&gt;=0 and sign(-sin(step/(room_speed/8)*pi))=-1 and grounded{audio_play_sound(step_snd, 20, false);}
hspeed = max(-horzSpeed,min(horzSpeed,hspeed));


if analogX&lt;0{facing = true; image_xscale = -1;}
if analogX&gt;0{facing = false; image_xscale = 1;}
angle += ((hspeed*2) - angle)*.8;

if grounded and jump{ //keyboard_check_pressed(key_jump){
    vspeed = -jumpSpeed;
    gravity = gravityStr;
    grounded = false;
    aiming = false;
    audio_play_sound(jump_snd, 10, false);
}

if !grounded and !jumping{ //!keyboard_check(key_jump){
gravity = gravityStr*(2+(max(0,analogY)));
}

if grounded{
if analogY&lt;-.8 and abs(hspeed)&lt;1{image_yscale += (.5-image_yscale)*.4;}
else{image_yscale += (1-image_yscale)*.4;}
}

image_blend = merge_color(my_blend,image_blend,stun);

if stun&gt;0{stun -= (1/(room_speed/2));}
else{stun = 0;}

if grounded and image_yscale&lt;.7 and aiming{aiming = 0;}

////////////////aiming and firing
if arrows&gt;0{
    if shoot{
        if !aiming{if facing{aim_dir = 180;}else{aim_dir = 0;}}
        aiming = 1;
        if abs(analogX)&gt;0 or abs(analogY)&gt;0{aim_dir = arctan2(analogY, analogX)*180/pi;}
        }
    else{
        if aiming{
            aiming = 0;
            arrows -=1;
            audio_play_sound(fire_snd, 10, false);
            var a = instance_create(x+lengthdir_x(8,aim_dir),y-16+lengthdir_y(16,aim_dir),objArrow);
            a.pickup = 0;
            a.direction = aim_dir;
            a.player = player;
            with(a){event_perform(ev_other,ev_user0);}
        }
    }
}
}
else{
aiming = 0;
angle += (0-angle)*.4;
if hspeed&gt;0 or image_angle&lt;0{image_angle += (-90 - image_angle)*.4; }
else{image_angle += (90 - image_angle)*.4; }
}

////////////even dead guys do collisions and ground checks

///////vertical
if vspeed&gt;=0{ //standing or falling
if place_meeting(x,y+1,objBlock){
y = round(y-vspeed);
while(!place_meeting(x,y+1,objBlock)){y+=1;}

grounded = true;
vspeed = 0;
gravity = 0;
}
else{
if grounded{
grounded = false;
gravity = gravityStr;
}
}
}else{
if place_meeting(x,y+vspeed,objBlock){
//y = round(y-vspeed);
while(!place_meeting(x,y-1,objBlock)){y-=1;}
vspeed = 0;
}
}

////horizontal
if place_meeting(x+hspeed,y,objBlock) and abs(hspeed)&gt;0{
//x = round(x-hspeed);
while(!place_meeting(x+sign(hspeed),y,objBlock)){x+=sign(hspeed);}
hspeed = 0;
//if dead{show_message("side collision");}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.flying and other.player!=player{//or check team instead player
    if !dead{
    dead = true;
    speed = other.speed;
    direction = other.direction;
    vspeed -= 4;
    audio_play_sound(death_snd, 10, false);
    image_blend = c_black;
    my_blend = image_blend;
    gamepad_set_vibration(player,.9,.9);
    alarm[0] = room_speed / 2;
    }
/*if stun==0{
stun = 1;
if x&gt;other.x{hspeed = horzSpeed;}
else{hspeed = -horzSpeed;}

image_blend = c_black;
}*/
}
else{
if !dead{
    arrows += 1;
    audio_play_sound(pickup_snd, 10, false);
    with(other){instance_destroy();}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !other.dead and !dead{
if x==other.x{
if hspeed&gt;0{other.x += sign(hspeed);}
else{other.x+=choose(1,-1);}
}
if vspeed&gt;0 and y&lt;=other.y-(sprite_yoffset/16){
    x -= hspeed; y-=vspeed;
    vspeed =-8;
    audio_play_sound(boop_snd, 10, false);
    gamepad_set_vibration(player,.7,.7);
    alarm[0] = room_speed / 8;
    //boop
    if other.arrows&gt;0 and arrows == 0{
        other.arrows -= 1;
        arrows += 1;
    }
}
else{
    if(team == 0 and other.team != team){
        audio_play_sound(sndBump, 10, false);
    } 
    gamepad_set_vibration(player,.6,.6);
    alarm[0] = room_speed / 8;
    stun = 1;
    aiming = 0;
    if x&gt;other.x{hspeed = horzSpeed;}
    if x&lt;other.x{hspeed = -horzSpeed;}
}
if(other.team != team){
    image_blend = c_black;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init

if (player % 2 == 1){
image_blend = c_yellow;
my_blend = image_blend;

team = 1;

//sounds
boop_snd = sndBoop2;
death_snd = sndDeath2;
fire_snd = sndFire2;
jump_snd = sndJump2;
pickup_snd = sndPickup2;
step_snd = sndStep2;

key_left = ord('A');
key_right = ord('D');
key_up = ord('W');
key_down = ord('S');

key_jump = vk_space;//ord('Z');
key_shoot = ord('C');
}
else{
image_blend = c_aqua;
my_blend = image_blend;

team = 0;

//sounds
boop_snd = sndBoop1;
death_snd = sndDeath1;
fire_snd = sndFire1;
jump_snd = sndJump1;
pickup_snd = sndPickup1;
step_snd = sndStep1;

key_left = vk_left;
key_right = vk_right;
key_up = vk_up;
key_down = vk_down;

key_jump = vk_shift;
key_shoot = vk_control;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>PlayerDraw(image_blend);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,32</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
