<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//buffer_get_surface();

//surf = surface_create(640,480);
//surface_set_target(surf);

buffer = ds_list_create();

stutter = 1; //how many frames to save. 1 = every frame, 2 = ever other, 3 = once every 3, etc
length = (room_speed*4) / stutter; //how long the replay will be

recording = 1;
replay_frame = 0;
startFrame = length-1;

frame_step = 0;
rewind = 0;

alarm[0] = length*stutter;

repeat(length){
ds_list_add(buffer,surface_create(640,480));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>PlayReplay();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room!=initRoom and room!=titleScreen{

if recording{
frame_step += 1;
if frame_step &gt;= stutter{
frame_step = 0;
    view_surface_id[0] = ds_list_find_value(buffer,0);
    ds_list_add(buffer,ds_list_find_value(buffer,0));
    ds_list_delete(buffer,0);
    
    startFrame = max(0,startFrame-1);
}
}
if !recording{
if rewind&lt;1{
    rewind += (1/(room_speed));
    replayFrame = max(startFrame,min(floor(power(1-rewind,1/1.5)*ds_list_size(buffer)),ds_list_size(buffer)-1));
    }
else{
replayFrame += 1/stutter;
if replayFrame &gt; ds_list_size(buffer)-1{replayFrame = ds_list_size(buffer)-1;}
}
}


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !surface_exists(ds_list_find_value(buffer,0)){
    ds_list_clear(buffer);
    repeat(length){
        ds_list_add(buffer,surface_create(640,480));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
for (var i=0; i&lt;ds_list_size(buffer); i+=1){
surface_free(ds_list_find_value(buffer,i));
}

ds_list_clear(buffer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_enabled = true;
view_visible[0] = true;
view_wview[0] = room_width;
view_hview[0] = room_height;
//view_surface_id[0] = surf;

frame_step = 0;
recording = 1;
startFrame = length-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room!=initRoom and room!=titleScreen{
if recording{
if surface_exists(view_surface_id[0]){draw_surface(view_surface_id[0],0,0);}
}
else{
    if replayFrame&lt;length-1 and rewind&gt;=1{surface_save(ds_list_find_value(buffer,floor(replayFrame)),string(replayFrame)+".png");}
    draw_surface(ds_list_find_value(buffer,floor(replayFrame)),0,0);
    
    if rewind&lt;1 and (current_time mod 500)&lt;250{
        draw_set_color(c_red);
        //draw_text(room_width/2,room_height/2,"let's watch#that again");
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tint players
if recording{
surface_set_target(ds_list_find_value(buffer,length-2));
with(objPlayer){
PlayerDraw(c_black);
}
surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room!=initRoom and room!=titleScreen{
if !recording{
if rewind&lt;1{
    draw_surface(ds_list_find_value(buffer,min(floor(power(1-rewind,1/4)*ds_list_size(buffer)),ds_list_size(buffer)-1)),0,0);
    //draw_text(32,32,string(min(floor(sqrt(1-rewind)*ds_list_size(buffer)),ds_list_size(buffer)-1)));
}
else{
    //if replayFrame&lt;length-1{surface_save(ds_list_find_value(buffer,floor(replayFrame)),string(replayFrame)+".png");}
    draw_surface(ds_list_find_value(buffer,floor(replayFrame)),0,0);
    //draw_text(32,32,string(replayFrame));
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
